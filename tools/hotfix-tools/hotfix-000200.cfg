# !!!
# please provide hot fix information and contact upgrade team for finishing
# the parallel execution blocks

# ------------------ hot fix information start ------------------

# unique identifier
# must-have field.
id = 000200

# product
# Value:
#   Atmos: Atmos hotfixes
#   ACDP: ACDP hotfixes
# empty value means "Atmos" hotfixes
product = Atmos

# one line short description
# must-have field.
# one line description. need to be quoted with """ """
desc = """Install patch engine utilities"""

# detailed description
# must-have field.
# detailed description which can span multiple lines. need to be quoted with """ """
long_desc = """This patch is to install some necessary utilities for Atmos patch
engine:
- appendlog
- atmos_wait
"""

# severity
# must-have field.
# possible valures are high, medium, low, enhancement
severity = medium

# hotfix status
# Value:
#   NEW: Request for CCB review (HF owner set)
#   APPROVED: CCB approves request (CCB set)
#   REJECTED: CCB rejects request (CCB SET)
#   DEVELOPMENT COMPLETED: Development complete and ready for QA testing (HF owner set)
# We are not going to have hotfix status for testing since the change hotfix config 
# will cause the checksum changed of hotfix package. We will rely on Async bug status for QA testing
#  
status = NEW

# applicable Atmos version number list
# must-have field.
# This should be a specific version number. One hotfix is ONLY for one version.
versions = "2.0.2"

# internal development bug number
# must-have field.
# This should be internal development bug but NOT escalation case bug #. if there 
# are multiple bug numbers, need to be quoted with " " and separated by ','.
bug = "23276"

# internal QA async bug number
# optional field. (must-have for requesting QA testing)
# if there are multiple bug numbers, need to be quoted with " " and separated by
# ','.
qa_bug = "23491"

# SVN commit number
# must-have field.
# if there are multiple SVN commits, need to be quoted with " " and separated by
# ','.
svn = "66002"

# whether this HF is for a DU/DL situation
# must-have field.
# valid option is "true" or "false"
DU/DL = false

# impacted services
# must-have field.
# If the HF requires service restarts (service windows), put impacted services in this field.
# If there are multiple impacted services, need to be quoted with "" and separate by ','
impacted_services = "MDLS,JS,SS"

# optional field.
# describe what shall be ready before applying the hot fix
prerequisite = """
* All nodes shall be up
* no outstanding serviceability operations
"""

# optional field.
# a list of hotfix that shall be applied before applying this one
dependency = "2.0.2.0.214"

# must-have field.
# Symptoms field describes environmental observations made at the time the problem
# occurred. It may also include any relevant log file entries and error messages.
symptoms = """
SMTP Error Message: 501 badly formatted MAIL FROM user - no "<"
Onsite SMTP server does not process messages lacking chevron brackets.
Atmos system is unable to transmit alert messages due to SMTP 501 errors.
"""

# must-have field.
# Cause explain the reason on why the problem occurred before and the hotfix needs
# to be applied to a system. 
cause = """
Atmos 1.4.x and Atmos 2.0.x contain ConnectEMC binaries that do not properly
handle email addresses lacking chevron brackets ("<" and ">"). If the onsite
SMTP server does not support email addresses lacking chevron brackets, email
relay attempts will fail with an SMTP 501 error code. To combat this issue,
Atmos Engineering has produced a hot fix containing a new ConnectEMC binary
(3.1.0.1-1-1) that resolves the missing chevron bracket issue noted above. 
"""

# must-have field
# indicate if this hotfix can be applied by applysp tool.
# if a hf need to apply to all nodes, one at a time, then shall use
# applysp tool. but later scope must be LOCAL.
applysp_runnable = 'true'

# installation help message
# optional field.
# if not supplied or it is "", then a default help message will be put into readme file.
help = ""

# list all changed/added/removed files done by this hot fix
# optional field.
# if there are multiple files, each shall be put in different lines
file_list = """
Added	/usr/local/maui/pxe/appendlog
Changed /usr/local/maui/pxe/atmos_wait
Removed /usr/useless
"""

# List build workspace path of each added/modified file listed 
# above in file_list that need to be packaged in the Hotfix.
# The file path is relative to build workspace root from where
# the files to be packaged in HF will be picked up by the build.
# Should match the added/modified files listed in file_list 
# and each file should be put on different lines.
# "Buildpath" string should be entered before the file path.
# NOTE: that all files to be packaged in HF needs to specified 
# in file_build_path. This would include tools, binaries, libraries, 
# scripts only for HF, etc.
# All files  listed in file_build_path are copied over to data 
# directory when packaging the hotfix.
file_build_path = """
Buildpath src/message200.rb
Buildpath src/task200.rb
"""

# ------------------ hot fix information end -------------------


# following is a parallel execution block section starting with []
# can have any number of sub section [[]]. each sub section contain one
# primitive and couple parameters
#
# Note:
# * parallel execution block can NOT be a sub section
# * each section shall have a unique name in same cfg file.

[Install Patch Engine Utilities]
# Scope examples: 
# - FILE:<hostlist_file>
#   Read host list from file.
# - ALL
#   All nodes in the system
# - RMG:<rmg-name>
#   All nodes in the RMG <rmg-name>
# - IS:<is-name>
#   All nodes in the Install Segment <is-name> 
# - NODE:<node-name1>[,node-name2[,node-name3]]
#   One or more nodes
# - LOCAL
#   Only on this node
# 
scope = "LOCAL"
execute = "parallel"
p_factor = "1"

[[Distribute appendlog]]
primitive = "Distribute"
# must-have field to indicate the source file. usually is under ./data
src = "./data/appendlog"
# must-have file to indicate the target file on target nodes
dst = "/tmp/appendlog"

[[Install appendlog]]
primitive = "CopyTo"
src = "/tmp/appendlog"
dst = "/usr/local/maui/pxe/appendlog"

[[Set appendlog runnable]]
primitive = "Exec"
# if there are more than one commands, then each one shall be in separate line
commands = """
chmod +x /usr/local/maui/pxe/appendlog
"""

[[Chksum]]
primitive = "Checksum"
# if there are more than one files, then each file shall be in separate line
# each file must has its full path
files = """
/usr/local/maui/pxe/atmos_wait
/usr/local/maui/pxe/appendlog
"""

[[Install gui.tar]]
# TODO: need to explain this dstdir
primitive = "Untar"
tarfile = "/tmp/gui.tar"
dstdir = "/usr/local/maui/gui"

[[Start mongrel service]]
primitive = "Service"
service = "mongrel"
action = "start"

[[Install Samba]]
primitive = "Install"
# files must be conary package
# if there are more than one files, then each file shall be in separate line
# each file must has its full path
files = """
/tmp/samba-3.4.5-RID.ccs
"""

# NOTE!!! This primitive is deprecated. HF will not be re-entrant once using
# this primitive. Suggest to use a script wrapper. For example, in HF116, a
# script will check if patch is applied already and only apply patch if not
# yet.
[[Patch code]]
primitive = "Patch"
# optional
origfile="/dev/null"
# patch file
patchfile = "/tmp/x.diff"
# stripe level, see patch -p option
stripe = 1
# optional, working dir, see patch -d option
dir = "/usr/local/maui/"

[[Sleep]]
primitive = 'Sleep'
# must have, number of second
delay = '10'

[[Backup smb.conf]]
primitive = "Backup"
# must have, only one file/directory per line
files = """
/etc/samba/smb.conf
/etc/httpd/httpd.conf
"""

# TODO
# wait

